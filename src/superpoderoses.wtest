import feria.*

describe "feria" {

	
	//const sanMartin = //un municipio normal (se necesita en la segunda parte)
	const sanMartin = new Municipio()
	//const quilmes = //un municipio relajado (se necesita en la segunda parte)
	const quilmes=new Relajado()
	//const tigre = //un municipio hiperrelajado (se necesita en la segunda parte)
	const tigre=new HiperRelajado() 
	//Remedios es una visitante de  72 tiene 500 pesos disponible. 
	//Para el punto 2: su deuda es de 700 y reside en Tigre	
	const Remedios = new Visitante(edad =72, dinero = 500, municipioRecidencia = tigre, deudaMunicipal = 700)
	
	//Manuel es un visitante de 7 años y tiene 30 pesos, 
	//Para el punto 2: no tiene deuda (es 0) y reside en Quilmes
	//const manuel = 
	const Manuel= new Visitante(edad = 7, dinero = 30, municipioRecidencia = 0, deudaMunicipal = quilmes)

	//Martin es un visitante de 16 años y tiene 120 pesos .
	//Para el punto 2: tiene 80 de deuda y reside en San Martin
	//const martin = 
	const Martin= new Visitante(edad = 16, dinero = 120, municipioRecidencia = sanMartin, deudaMunicipal = 80)
	
	
	//const arte = //Un puesto infantil, para la segunda parte su municipio es San Martin
	const arte= new PuestoInfantil(padrino = sanMartin)
	//const dardos = //un puesto comercial de costo 50, para la segunda parte el municipio es San Martín
		const dardos = new PuestoComercial(costo = 50, padrino = sanMartin)
	//const feriaAzurduy = // una feria con los puestos de arte y dardos 
	const feriaAzurduy = new Feria()

	//const puestoTigre = //un puesto impositivo del municipio de tigre 
		const puestoTigre = new PuestoImpositivo(padrino = tigre)
	//const puestoSanMartin = //un puesto impositivo del municipio de san Martin
		const puestoSanMartin = new PuestoImpositivo(padrino = sanMartin)
	//const puestoQuilmes = //un puesto impositivo del municipio de quilmes
		const puestoQuilmes = new PuestoImpositivo(padrino = quilmes)
		

 	 test "1.1.a se puede visitar?" {
		feriaAzurduy.agregarPuesto(arte)
		feriaAzurduy.agregarPuesto(dardos)
		 	 
		//asegurarse que arte NO puede ser usado por remedios
			assert.notThat(arte.puedeSerUsado(Remedios))		
		//asegurarse que arte puede ser usado por manuel
		assert.that(arte.puedeSerUsado(Manuel))
		//asegurarse que arte puede ser usado por martin
		assert.that(arte.puedeSerUsado(Martin))
		
		//asegurarse que dardos puede ser usado por remedios
		assert.that(dardos.puedeSerUsado(Remedios))
		//asegurarse que dardos NO puede ser usado por manuel
		assert.notThat(dardos.puedeSerUsado(Manuel))
		//asegurarse que dardos puede ser usado por martin
		assert.that(dardos.puedeSerUsado(Martin))
	}
	


	test "1.1.b saber puestos visitables" {
		feriaAzurduy.agregarPuesto(arte)
		feriaAzurduy.agregarPuesto(dardos)
		//asegurarse que dardos es el unico puesto que puede usar remedios en la feria azurduy
		assert.equals([dardos], feriaAzurduy.cualesPuedeVisitar(Remedios))
		//asegurarse que arte es el unico puesto que puede usar maniuel en la feria azurduy
		assert.equals([ arte ], feriaAzurduy.cualesPuedeVisitar(Manuel))
		//asegurarse que dardos y artes son los puestos que puede martin en la feria azurduy
		assert.equals([ arte,dardos], feriaAzurduy.cualesPuedeVisitar(Martin))
	}	

	test "1.2.a efectos de usar" {
		// hacer que el puesto de dardos sea usado por remedios. 
			 dardos.usar(Remedios)
		// hacer que el puesto de arte sea usado por remedios (NO SE PUEDE!)
			assert.throwsException({arte.usar(Remedios)})
			assert.throwsExceptionWithMessage("este puesto no puede ser usado",{arte.usar(Remedios)})
		// el puesto de dardos sea usado por manuel (NO SE PUEDE!) 
			assert.throwsException({dardos.usar(Manuel)})
		// hacer que el puesto de arte sea usado por manuel 
			arte.usar(Manuel)
		// hacer que el puesto de dardos sea usado por martin. 
			dardos.usar(Martin)
		// hacer que el puesto de arte sea usado por martin
			arte.usar(Martin)
				
		//
		
		//comprobar que el dinero de remedios es 450
		assert.equals(450, Remedios.dinero())
		//comprobar que el dinero de manuel es  40
		assert.equals(40, Manuel.dinero())
		//comprobar que el dinero de martín es 80
		assert.equals(80, Martin.dinero())
		//comprobar que el puesto de arte fue usado por martin y manuel
			assert.equals([ Manuel, Martin ], arte.visitantes())
		//comprobar que el puesto de dardos due usados por remedios y martin
			assert.equals([ Remedios, Martin ], dardos.visitantes())
		
	}


	test "1.2.b saber si se usó o no la feria" {
		feriaAzurduy.agregarPuesto(arte)
		feriaAzurduy.agregarPuesto(dardos)
	// hacer que el puesto de dardos sea usado por remedios. 
		dardos.usar(Remedios)
	// hacer que el puesto de dardos sea usado por manuel (NO SE PUEDE!)
		assert.throwsException({ dardos.usar(Manuel)})
	// revisar que remedios usó la feria azurduy
		assert.that(feriaAzurduy.usoAlgunPuesto(Remedios))
	// revisar que manuel NO usó la feria azurduy
		assert.notThat(feriaAzurduy.usoAlgunPuesto(Manuel))
		
	// revisar que martin NO uso la feria azurduy
 		assert.notThat(feriaAzurduy.usoAlgunPuesto(Martin))
 		
 	}
 
  	
 	test "2.1 monto exigible y puestos impositivos visitables" {
 		
 		//verificar que 80 es el monto que san martin le exige a martin
 		assert.equals(80, sanMartin.montoExigible(Martin))
 		//verificar que puestoSanMartin puede ser usado por martin
 			assert.that(puestoSanMartin.puedeSerUsado(Martin))
 		//verificar que puestoSanTigre NO puede ser usado por martin
 			assert.notThat(puestoTigre.puedeSerUsado(Martin))
 		//verificar que puestoSanQuilmes NO puede ser usado por martin
			assert.notThat(puestoQuilmes.puedeSerUsado(Martin))
 		
 		//verificar que 0 es el monto que quilmes le exige a manuel
 		//	assert.equals(0, quilmes.montoExigible(Manuel))
 		//verificar que puestoSanMartin NO puede ser usado por manuel
 
 		 	assert.throwsException({ puestoSanMartin.usar(Manuel)})
 		
 		//verificar que 320 es el monto que tigre le exige a remedios
 			assert.equals(320 , tigre.montoExigible(Remedios))
 		//verificar que puestoTigre puede ser usado por remedios
 			assert.that(puestoTigre.puedeSerUsado(Remedios))
 		//hacer que remedios resida en san martin
 			Remedios.municipio(sanMartin)
 		//verificar que 700 es el monto que san martin le exige a remedios
 			assert.equals(700, sanMartin.montoExigible(Remedios))
 		//verificar que puestoSanMartin NO puede ser usado por remedios
 		assert.throwsException({puestoSanMartin.puedeSerUsado(Remedios)})
 		
 		//hacer que remedios resida en san quilmes
 		
 		//verificar que 500 es el monto que quilmes le exige a remedios
 		
 		//verificar que puestoQuilmes puede ser usado por remedios

 		//hacer que remedios tenga 80 años
 		
 		//verificar que 450 es el monto que quilmes le exige a remedios
 		
 		//verificar que puestoQuilmes puede ser usado por remedios
 		
 	}
 	

 	test "2.2 usar puestos impositivos y consultas de municipio" {
		// agregar puestoTigre a la feriaAzurduy
		feriaAzurduy.agregarPuesto(puestoTigre)
		// agregar puestoSanMartin a la feriaAzurduy
		feriaAzurduy.agregarPuesto(sanMartin)
		// const juana= //una visitante que reside en San Martín, tiene 20 años, 1000 pesos y una deuda de 300. 
		 	const Juana = new Visitante(edad = 20, dinero = 1000, municipioRecidencia = sanMartin, deudaMunicipal =300)

		// hacer que el puesto impositivo de Tigre sea usado por Remedios.
		puestoTigre.usar(Remedios)
		// hacer que el puesto impositivo de San Martín sea usado por Juana. 
		sanMartin.usar(Juana)
		// hacer que el puesto impositivo de San Martín sea usado por Martín.
		sanMartin.usar(Martin)
		//Verificar que Martín no tiene mas deuda 
		
		//Verificar que Martin tiene 40 de dinero.
		
		//Verificar que Juana no tiene más deuda 
		
		//Verificar que Juana le queda 700 de dinero.
		
		//Verificar que Remedios tiene 380 de deuda 
		//Verificar que Remedios tiene 180 de dinero.
		//Verificar que Tigre recaudó 320.
		//Verificar que San Martín recaudó 380.
		//Verificar que Tigre apadrina 1 puesto de la feria Azurduy.
		//Verificar que San Martín apadrina 3 puestos de la feria Azurduy.
		//Verificar que Quilmes no apadrina a nadie en la feria Azurduy.
		//Verificar que los municipios apadrinantes de la feria Azurduy son Tigre y San Martín.
		//Verificar que el promedio de racaudación de la feria Azurduy es 350.
		//Verificar que el municipio que menos recaudó en la feria es Tigre.
 		
 	}

	
}
